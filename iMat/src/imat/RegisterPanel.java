/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package imat;

import imat.controller.UserManager;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.font.TextAttribute;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeSupport;
import java.util.Calendar;
import static java.util.Calendar.DAY_OF_YEAR;
import java.util.Map;
import java.util.regex.Pattern;
import javax.mail.internet.AddressException;
import javax.mail.internet.InternetAddress;
import javax.swing.JLabel;
import javax.swing.JTextField;
import javax.swing.border.LineBorder;

/**
 *
 * @author mats
 */
public class RegisterPanel extends javax.swing.JPanel {
    
    /**
     * Creates new form RegisterPanel
     */
    public RegisterPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cityField = new javax.swing.JTextField();
        persnbrField = new javax.swing.JTextField();
        passwordStarLabel = new javax.swing.JLabel();
        firstnameLabel = new javax.swing.JLabel();
        passwordField = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        lastnameLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        emailField = new javax.swing.JTextField();
        postCodeField = new javax.swing.JTextField();
        phoneField = new javax.swing.JTextField();
        emailStarLabel = new javax.swing.JLabel();
        registerButton = new javax.swing.JButton();
        cityLabel = new javax.swing.JLabel();
        addressField = new javax.swing.JTextField();
        postCodeLabel = new javax.swing.JLabel();
        confirmPasswordField = new javax.swing.JPasswordField();
        passwordLabel = new javax.swing.JLabel();
        emailLabel = new javax.swing.JLabel();
        addressLabel = new javax.swing.JLabel();
        confirmPasswordLabel = new javax.swing.JLabel();
        lastnameField = new javax.swing.JTextField();
        firstnameField = new javax.swing.JTextField();
        confirmPasswordStarLabel = new javax.swing.JLabel();
        phoneLabel = new javax.swing.JLabel();
        persnbrLabel = new javax.swing.JLabel();
        titleLabel = new javax.swing.JLabel();
        backButton = new imat.BackButton();

        setBackground(new java.awt.Color(246, 246, 246));

        jPanel1.setBackground(new java.awt.Color(246, 246, 246));

        passwordStarLabel.setText("*");

        firstnameLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        firstnameLabel.setText("Förnamn");

        jLabel2.setForeground(new java.awt.Color(102, 102, 102));
        jLabel2.setText("<html>E-postadressen du fyller i kommer fungera som användarnamn vid inloggning</html>");

        lastnameLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lastnameLabel.setText("Efternamn");

        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setText("Fält markerade med * måste fyllas i");

        emailField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fieldFocusGained(evt);
            }
        });

        emailStarLabel.setText("*");

        registerButton.setText("Registrera");
        registerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerButtonActionPerformed(evt);
            }
        });

        cityLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        cityLabel.setText("Stad");

        addressField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fieldFocusGained(evt);
            }
        });

        postCodeLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        postCodeLabel.setText("Postnummer");

        passwordLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        passwordLabel.setText("Lösenord");

        emailLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        emailLabel.setText("E-postadress");

        addressLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        addressLabel.setText("Gatuadress");

        confirmPasswordLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        confirmPasswordLabel.setText("Bekräfta lösenord");

        confirmPasswordStarLabel.setText("*");

        phoneLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        phoneLabel.setText("Mobilnummer");

        persnbrLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        persnbrLabel.setText("Personnummer");

        titleLabel.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Registrering");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(persnbrLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(firstnameLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(lastnameLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(addressLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(postCodeLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(emailLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                            .addComponent(postCodeField, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(cityLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(cityField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(addressField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lastnameField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(firstnameField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(emailField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(persnbrField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(emailStarLabel))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(passwordLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(confirmPasswordLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(phoneLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(registerButton)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(passwordField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(confirmPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(phoneField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(6, 6, 6)
                                    .addComponent(jLabel1)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(confirmPasswordStarLabel)
                                .addComponent(passwordStarLabel))))
                    .addComponent(titleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emailLabel)
                    .addComponent(emailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emailStarLabel))
                .addGap(0, 0, 0)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(persnbrLabel)
                    .addComponent(persnbrField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstnameLabel)
                    .addComponent(firstnameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lastnameLabel)
                    .addComponent(lastnameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addressLabel)
                    .addComponent(addressField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(postCodeLabel)
                    .addComponent(postCodeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cityLabel)
                    .addComponent(cityField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(phoneLabel)
                    .addComponent(phoneField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordLabel)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordStarLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirmPasswordLabel)
                    .addComponent(confirmPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(confirmPasswordStarLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(registerButton)
                .addContainerGap(100, Short.MAX_VALUE))
        );

        backButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(100, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(100, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void registerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerButtonActionPerformed
        resetLabels();
        
        boolean error = validateMandatoryFields();
        
        if (!error) {
            String persnbr = persnbrField.getText();
            String address = addressField.getText();
            String email = emailField.getText();
            String firstname = firstnameField.getText();
            String lastname = lastnameField.getText();
            String phoneNumber = phoneField.getText();
            String city = cityField.getText();
            String postCode = postCodeField.getText();

            String password = new String(passwordField.getPassword());
            
            UserManager um = UserManager.getInstance();
            boolean result = um.register(persnbr, address, email, firstname, lastname, phoneNumber, city, postCode, password);
            
            if (result) {
                firePropertyChange("register", null, null);
            }
        }
    }//GEN-LAST:event_registerButtonActionPerformed

    private void fieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fieldFocusGained
        JTextField field = (JTextField) evt.getSource();
        field.selectAll();
    }//GEN-LAST:event_fieldFocusGained

    private void backButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backButtonMouseClicked
        firePropertyChange("showLoginCard", null, null);
    }//GEN-LAST:event_backButtonMouseClicked
    
    private void resetLabels() {
        emailLabel.setForeground(Color.BLACK);
        emailStarLabel.setForeground(Color.BLACK);
        persnbrLabel.setForeground(Color.BLACK);
        postCodeLabel.setForeground(Color.BLACK);
        phoneLabel.setForeground(Color.BLACK);
        passwordLabel.setForeground(Color.BLACK);
        passwordStarLabel.setForeground(Color.BLACK);
        confirmPasswordLabel.setForeground(Color.BLACK);
        confirmPasswordStarLabel.setForeground(Color.BLACK);
    }
    
    public void focusFirstField() {
        emailField.requestFocus();
    }
    
    private boolean validateMandatoryFields() {
        boolean error = false;
        
        if (!isValidEmail(emailField.getText())) {
            emailLabel.setForeground(Constants.ERROR_COLOR);
            emailStarLabel.setForeground(Constants.ERROR_COLOR);
            error = true;
        }
        
        if (!persnbrField.getText().equals("")) {
            if (!isValidPersnbr(persnbrField.getText())) {
                persnbrLabel.setForeground(Constants.ERROR_COLOR);
                error = true;
            }
        }
        
        if (!postCodeField.getText().equals("")) {
            if (!isValidPostCode(postCodeField.getText())) {
                postCodeLabel.setForeground(Constants.ERROR_COLOR);
                error = true;
            }
        }
        
        if (!phoneField.getText().equals("")) {
            if (!isValidPhoneNumber(phoneField.getText())) {
                phoneLabel.setForeground(Constants.ERROR_COLOR);
                error = true;
            }
        }
        
        String password = new String(passwordField.getPassword());
        String confirmedPassword = new String(confirmPasswordField.getPassword());
        
        if (!password.equals(confirmedPassword) || password.equals("") || confirmedPassword.equals("")) {
            passwordLabel.setForeground(Constants.ERROR_COLOR);
            passwordStarLabel.setForeground(Constants.ERROR_COLOR);
            
            confirmPasswordLabel.setForeground(Constants.ERROR_COLOR);
            confirmPasswordStarLabel.setForeground(Constants.ERROR_COLOR);
            
            error = true;
        }
        
        return error;
    }
    
    private static boolean isValidEmail(String email) {
        if (email.equals("")) {
            return false;
        } else {
            boolean result = true;
            try {
               InternetAddress emailAddr = new InternetAddress(email);
               emailAddr.validate();
            } catch (AddressException ex) {
               result = false;
            }
            return result;
        }
    }
    
    private static boolean isValidPersnbr(String persnbr) {
        String yearStr;
        String monthStr;
        String dayStr;
        String secretStr;
        
        if (persnbr.indexOf("-") != -1 && persnbr.indexOf("-") != persnbr.length() - 5) {
            return false;
        }
        
        persnbr = persnbr.replaceFirst("-", "");
        
        if (persnbr.length() == 10) {
            yearStr = persnbr.substring(0, 2);
            persnbr = persnbr.substring(2);
        } else if (persnbr.length() == 12) {
            yearStr = persnbr.substring(0, 4);
            persnbr = persnbr.substring(4);
        } else {
            return false;
        }
        
        monthStr = persnbr.substring(0, 2);
        dayStr = persnbr.substring(2, 4);
        secretStr = persnbr.substring(4, 8);
        
        int year;
        int month;
        int day;
        int secret;

        try {
            year = Integer.parseInt(yearStr);
            month = Integer.parseInt(monthStr);
            day = Integer.parseInt(dayStr);
            secret = Integer.parseInt(secretStr);
        } catch (NumberFormatException e) {
            return false;
        }
        
        if (year > 0
                && month >= 1 && month <= 12
                && day >= 1 && day <= daysInMonth(month, year)) {
            return true;
        }
        
        return false;
    }
    
    private static boolean isValidPostCode(String postCode) {
        if (postCode.indexOf(" ") != -1 && postCode.indexOf(" ") != postCode.length() - 3) {
            return false;
        }
        
        postCode = postCode.replaceFirst(" ", "");
        
        if (postCode.length() != 5) {
            return false;
        }
        
        try {
            int i = Integer.parseInt(postCode);
        } catch (NumberFormatException e) {
            return false;
        }
        return true;
    }
    
    private static boolean isValidPhoneNumber(String number) {
        return number.matches("^(\\+?46|0)7\\d{8}$");
    }
    
    private static int daysInMonth(int m, int y) {
        switch (m) {
            case 2:
                if (isLeapYear(y)) {
                    return 29;
                } else {
                    return 28;
                }
            case 1: case 3: case 5: case 7: case 8: case 10: case 12:
                return 31;
            case 4: case 6: case 9: case 11:
                return 30;
        }
        return 0;
    }
    
    public static boolean isLeapYear(int year) {
        Calendar cal = Calendar.getInstance();
        cal.set(Calendar.YEAR, year);
        return cal.getActualMaximum(DAY_OF_YEAR) > 365;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addressField;
    private javax.swing.JLabel addressLabel;
    private imat.BackButton backButton;
    private javax.swing.JTextField cityField;
    private javax.swing.JLabel cityLabel;
    private javax.swing.JPasswordField confirmPasswordField;
    private javax.swing.JLabel confirmPasswordLabel;
    private javax.swing.JLabel confirmPasswordStarLabel;
    private javax.swing.JTextField emailField;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JLabel emailStarLabel;
    private javax.swing.JTextField firstnameField;
    private javax.swing.JLabel firstnameLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField lastnameField;
    private javax.swing.JLabel lastnameLabel;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JLabel passwordStarLabel;
    private javax.swing.JTextField persnbrField;
    private javax.swing.JLabel persnbrLabel;
    private javax.swing.JTextField phoneField;
    private javax.swing.JLabel phoneLabel;
    private javax.swing.JTextField postCodeField;
    private javax.swing.JLabel postCodeLabel;
    private javax.swing.JButton registerButton;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
}
