/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package imat;

import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.awt.event.ComponentListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import javax.swing.BorderFactory;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.border.TitledBorder;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.plaf.basic.BasicMenuUI;
import javax.swing.plaf.basic.BasicTabbedPaneUI;

/**
 *
 * @author win8
 */
public class ShoppingPanel extends javax.swing.JPanel {

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ContentPanel = new javax.swing.JPanel();
        cartPanel = new imat.CartPanel();
        shoppingListPanel = new imat.ShoppingListPanel();
        cartTabIcon = new javax.swing.JLabel();
        shoppingListTabIcon = new javax.swing.JLabel();
        cartLabel = new javax.swing.JLabel();
        shoppingListLabel = new javax.swing.JLabel();
        tabbedPane = new javax.swing.JTabbedPane();
        cartTab = new javax.swing.JPanel();
        shoppingListTab = new javax.swing.JPanel();

        ContentPanel.setLayout(new java.awt.CardLayout());
        ContentCardLayout = (CardLayout) ContentPanel.getLayout();
        ContentPanel.add(cartPanel, "cartCard");
        ContentPanel.add(shoppingListPanel, "shoppingListCard");

        cartTabIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/img/shopping122.png"))); // NOI18N

        shoppingListTabIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/img/lists.png"))); // NOI18N

        cartLabel.setFont(new java.awt.Font("Courier New", 1, 13)); // NOI18N
        cartLabel.setText("<html>K<BR>U<BR>N<BR>D<BR>V<BR>A<BR>G<BR>N</html>");

        shoppingListLabel.setFont(new java.awt.Font("Courier New", 1, 13)); // NOI18N
        shoppingListLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        shoppingListLabel.setText("<html> ​‌‍‎‏I<BR>N<BR>K<BR>Ö<BR>P<BR>S<BR>L<BR>I<BR>S<BR>T<BR>A</html>\n");
        shoppingListLabel.setFocusable(false);
        shoppingListLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        shoppingListLabel.getAccessibleContext().setAccessibleName("<html>.I<BR>N<BR>K<BR>Ö<BR>P<BR>S<BR>L<BR>I<BR>S<BR>T<BR>A</html>\n");

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.LINE_AXIS));

        tabbedPane.setBackground(Constants.MAIN_BACKGROUND);
        tabbedPane.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        tabbedPane.setToolTipText("");
        tabbedPane.setMinimumSize(new java.awt.Dimension(40, 25));
        tabbedPane.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tabbedPaneStateChanged(evt);
            }
        });
        tabbedPane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabbedPaneMouseClicked(evt);
            }
        });

        cartTab.setBackground(Constants.CART_COLOR);
        cartTab.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cartTab.setPreferredSize(new java.awt.Dimension(23, 300));
        cartTab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cartTabMouseClicked(evt);
            }
        });
        cartTab.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 3, 3));
        tabbedPane.addTab("tab1", null, cartTab, "Visa kundvagnen");

        shoppingListTab.setBackground(Constants.LIST_COLOR);
        shoppingListTab.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        shoppingListTab.setPreferredSize(new java.awt.Dimension(23, 300));
        shoppingListTab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                shoppingListTabMouseClicked(evt);
            }
        });
        shoppingListTab.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 3, 3));
        tabbedPane.addTab("t22ab2", null, shoppingListTab, "Visa inköpslistor");

        tabbedPane.setBackgroundAt(0, Constants.CART_COLOR);
        tabbedPane.setBackgroundAt(1, Constants.LIST_COLOR);

        add(tabbedPane);
        //remove(tabbedPane);
        //add(tabbedPane,java.awt.BorderLayout.EAST);
    }// </editor-fold>//GEN-END:initComponents

    private void tabbedPaneStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tabbedPaneStateChanged

        if (tabbedPane.getSelectedIndex() == 0) {
            setContentPanel("cartCard");
        } else {
            setContentPanel("shoppingListCard");

        }
// TODO add your handling code here:
    }//GEN-LAST:event_tabbedPaneStateChanged

    private void tabbedPaneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabbedPaneMouseClicked
       if(!isContentVisible()){
           showContent(true);
       }
    }//GEN-LAST:event_tabbedPaneMouseClicked

    private void cartTabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cartTabMouseClicked
           //makes this area not trigger any events for mouselisteners listening to whole tabbedpane
    }//GEN-LAST:event_cartTabMouseClicked

    private void shoppingListTabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_shoppingListTabMouseClicked
        //makes this area not trigger any events for mouselisteners listening to whole tabbedpane
    }//GEN-LAST:event_shoppingListTabMouseClicked

    public ShoppingPanel() {

        button = new ExpandButton(20);
        button.setToolTipText("Minimera kundvagn/inköpslista");
        initComponents();

        //cartTab.add(button);
        //cartTab.add(cartLabel);
        shoppingListTab.add(button);
        shoppingListTab.add(shoppingListLabel);
        tabbedPane.setSelectedIndex(1);
        button.addChangeListener(new ChangeListener() {

            @Override
            public void stateChanged(ChangeEvent e) {
                showContent(button.isSelected());
            }
        });
        tabbedPane.setTabComponentAt(0, cartTabIcon);
        tabbedPane.setTabComponentAt(1, shoppingListTabIcon);
        SwingUtilities.updateComponentTreeUI(tabbedPane);

        UIManager.put("TabbedPane.selected", Color.TRANSLUCENT);
        tabbedPane.setUI(new BasicTabbedPaneUI());

        cartTabIcon.setBorder(BorderFactory.createEmptyBorder(20, 0, 20, 0));
        shoppingListTabIcon.setBorder(BorderFactory.createEmptyBorder(20, 0, 20, 0));

    }

    public void setContentToCart() {
        tabbedPane.setSelectedIndex(0);
    }
    public void setContentToShoppingList() {
        tabbedPane.setSelectedIndex(1);
    }
    private void setContentPanel(String cardName) {
        switch (cardName) {
            case "cartCard":
                cartTab.add(button);
                cartTab.add(cartLabel);
                break;
            case "shoppingListCard":
                shoppingListTab.add(button);
                shoppingListTab.add(shoppingListLabel);
                break;
        }
        cartPanel.updateSize();
        ContentCardLayout.show(ContentPanel, cardName);

    }

    public String getCurrentCard() {
            for(Component comp : ContentPanel.getComponents()) {
                if(comp.isVisible()) {
                    return comp== cartPanel ? "cartCard" : "shoppingListCard";
                }
            }
            return null;
    }

    public void showContent(boolean show) {
        //bug protection
        if (show && !contentVisible) {
            add(ContentPanel);
        } else if (!show && contentVisible) {
            remove(ContentPanel);
        }

        this.revalidate();
        contentVisible = show;
        button.setSelected(show);
    }

    public void setCheckoutButtonPerformedListener(ShowCheckoutContentHandler handler) {
        cartPanel.setCheckoutButtonPerformedListener(handler);
    }

    public boolean isContentVisible() {
        return contentVisible;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ContentPanel;
    private javax.swing.JLabel cartLabel;
    private imat.CartPanel cartPanel;
    private javax.swing.JPanel cartTab;
    private javax.swing.JLabel cartTabIcon;
    private javax.swing.JLabel shoppingListLabel;
    private imat.ShoppingListPanel shoppingListPanel;
    private javax.swing.JPanel shoppingListTab;
    private javax.swing.JLabel shoppingListTabIcon;
    private javax.swing.JTabbedPane tabbedPane;
    // End of variables declaration//GEN-END:variables
ExpandButton button;
    CardLayout ContentCardLayout;
    boolean contentVisible = false;
}
