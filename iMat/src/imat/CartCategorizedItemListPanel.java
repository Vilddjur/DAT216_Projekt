/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package imat;

import imat.controller.CartManager;
import java.awt.Dimension;
import se.chalmers.ait.dat215.project.CartEvent;
import se.chalmers.ait.dat215.project.IMatDataHandler;
import se.chalmers.ait.dat215.project.Product;
import se.chalmers.ait.dat215.project.ShoppingCart;
import se.chalmers.ait.dat215.project.ShoppingCartListener;
import se.chalmers.ait.dat215.project.ShoppingItem;

/**
 *
 * @author win8
 */
public class CartCategorizedItemListPanel extends javax.swing.JPanel implements ShoppingCartListener {

    /**
     * Creates new form CategorizedShoppingListItemPanel
     */
    public CartCategorizedItemListPanel() {
        this("Okatogoriserade varor");
    }

    public CartCategorizedItemListPanel(String categoryName) {
        initComponents();
        categoryNameLabel.setText(categoryName);

        shoppingItemListPanel1.setItemPanelListener(new ShoppingItemPanelListener() {

            @Override
            public void amountChanged(ShoppingItem item, double changedTo) {
                cartManager.setAmountOfItem(item, changedTo);
            }

            @Override
            public void itemRemoved(ShoppingItem item) {
                cartManager.removeItem(item);
            }
        }
        );
        for (ShoppingItem item : cart.getItems()) {
            shoppingItemListPanel1.insertShoppingItem(item);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        categoryNameLabel = new javax.swing.JLabel();
        shoppingItemListPanel1 = new imat.CartItemListPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jSeparator2 = new javax.swing.JSeparator();
        jPanel5 = new javax.swing.JPanel();

        categoryNameLabel.setText("Category name");

        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.PAGE_AXIS));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 137, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 11, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel4);
        jPanel1.add(jSeparator2);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 137, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 11, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(shoppingItemListPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(categoryNameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(categoryNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(shoppingItemListPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel categoryNameLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JSeparator jSeparator2;
    private imat.CartItemListPanel shoppingItemListPanel1;
    // End of variables declaration//GEN-END:variables
    private ShoppingCart cart = IMatDataHandler.getInstance().getShoppingCart();
    private CartManager cartManager = CartManager.getInstance();

    @Override
    public void shoppingCartChanged(CartEvent ce) {

        ShoppingItem item = ce.getShoppingItem();

        if (item == null && cart.getItems().isEmpty()) {
            shoppingItemListPanel1.clearList();
        } else if (ce.isAddEvent()) {
            if (item == null || item.getAmount() <= 0) {
                return;
            }
            Product p = item.getProduct();
            for (ShoppingItem existingItem : cart.getItems()) {
                if (existingItem.getProduct().equals(p) && existingItem != item) {
                    item.setAmount(item.getAmount() + existingItem.getAmount());
                    cart.removeItem(existingItem);
                    System.out.println("removed");
                    break;
                }
            }
            System.out.println("add");
            shoppingItemListPanel1.insertShoppingItem(item);
        } else if (!cartManager.containsShoppingItem(item)) {
            shoppingItemListPanel1.removeItem(item);
        } else { //amount was changed
            shoppingItemListPanel1.updateList();
        }

        updateSize();
    }

    public void updateSize() {
        shoppingItemListPanel1.updateSize();
        setSize(getPreferredSize());
        setMaximumSize(getPreferredSize());
        revalidate();
    }

}
